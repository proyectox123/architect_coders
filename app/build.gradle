apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.sonarqube'
apply from: '../sonarqube.gradle'
apply from: '../jacoco.gradle'

def apikeyPropertiesFile = rootProject.file("apikey.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.mho.training"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.mho.training.UiRunner"

        buildConfigField("String", "MOVIE_DB_API_KEY", apikeyProperties['MOVIE_DB_API_KEY'])

        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            testCoverageEnabled false
        }
        debug {
            minifyEnabled false
            testCoverageEnabled true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled true
    }

    lintOptions {
        checkDependencies true
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    sourceSets {
        main {
            res.srcDirs = [
                    'src/main/res',
                    'src/main/res/layouts/activities',
                    'src/main/res/layouts/fragments',
                    'src/main/res/layouts/items-adapter',
                    'src/main/res/layouts/sections'
            ]
        }
    }

    testOptions {
        animationsDisabled true

        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
}

androidExtensions {
    experimental = true
}

dependencies {
    implementation project(":frameworkretrofit")
    implementation project(":frameworkroom")
    implementation project(":data")
    implementation project(":domain")
    implementation project(":usecases")
    testImplementation project(':testShared')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "androidx.appcompat:appcompat:$appCompatVerion"
    implementation "androidx.cardview:cardview:$cardviewView"
    implementation "androidx.core:core-ktx:$coreKTXVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerviewVersion"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swiperefreshlayoutVersion"

    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"

    //Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    //Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"

    //Live Data
    implementation "androidx.lifecycle:lifecycle-livedata-core-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycleVersion"

    //Location
    implementation "com.google.android.gms:play-services-location:$playServicesLocationVersion"

    //Metadata
    kapt "org.jetbrains.kotlinx:kotlinx-metadata-jvm:$kotlinxMetadataJVMVersion"

    //Permission
    implementation "com.karumi:dexter:$dexterVersion"

    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"
    testImplementation "junit:junit:$junitVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoKotlinInlineVersion"
    testImplementation "android.arch.core:core-testing:$coreTestingVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.0"

    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.1'
    androidTestImplementation "androidx.test:runner:$runnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:4.2.1'
    androidTestImplementation 'com.jakewharton.espresso:okhttp3-idling-resource:1.0.0'
}
